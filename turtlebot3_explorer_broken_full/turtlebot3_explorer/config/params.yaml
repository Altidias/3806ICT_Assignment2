# Multi-Robot Exploration Configuration

# Robot Control Parameters
multi_robot_explorer:
  # Movement parameters
  position_tolerance: 0.25      # Distance tolerance for waypoint arrival (meters)
  angular_tolerance: 0.25       # Angular tolerance for rotation (radians)
  linear_speed: 0.3             # Maximum linear velocity (m/s)
  angular_speed: 1.5            # Maximum angular velocity (rad/s)
  
  # Control loop
  update_rate: 10.0             # Control loop frequency (Hz)
  
  # Stuck detection
  stuck_threshold: 0.01         # Minimum movement to avoid stuck detection (m)
  stuck_timeout: 15             # Stuck detection timeout (control cycles)
  
  # Frontier assignment
  max_frontier_history: 3       # Number of recent frontiers to avoid

# Map Merger Parameters
map_merger:
  merged_map_topic: "/map"      # Output topic for merged map
  merge_rate: 10.0               # Map merge frequency (Hz)
  map_size: 30.0                # Global map size (meters)
  resolution: 0.1              # Map resolution (meters/pixel)

# Frontier Detection Parameters  
frontier_detector:
  map_topic: "/map"             # Input map topic
  frontier_topic: "/frontiers"  # Output frontiers topic
  min_frontier_size: 5          # Minimum cluster size for frontiers
  update_rate: 1.0              # Frontier detection frequency (Hz)

# A* Path Planner Parameters
astar_planner:
  allow_unknown: false          # Allow planning through unknown space
  robot_radius: 0.3             # Robot radius for collision checking (meters)

# SLAM Initializer Parameters
slam_initializer:
  # Movement sequence for SLAM initialization
  initialization_moves:
    - {description: "forward", linear: 0.15, angular: 0.0, duration: 2.0}
    - {description: "rotate_left", linear: 0.0, angular: 0.4, duration: 2.0}
    - {description: "forward", linear: 0.15, angular: 0.0, duration: 2.0}
    - {description: "rotate_right", linear: 0.0, angular: -0.4, duration: 3.0}
    - {description: "forward", linear: 0.1, angular: 0.0, duration: 1.0}

# Robot Spawn Positions (for different numbers of robots)
robot_positions:
  robot1: {x: 0.5, y: 3.0, z: 0.0}
  robot2: {x: -2.0, y: 1.0, z: 0.0}
  robot3: {x: 1.0, y: -1.5, z: 0.0}
  robot4: {x: -1.0, y: -2.0, z: 0.0}