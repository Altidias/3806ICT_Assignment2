<launch>
    <!-- Start minimal system for rescue testing -->
    <arg name="gui" default="true"/>
    <env name="TURTLEBOT3_MODEL" value="waffle"/>
    
    <!-- Gazebo -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(find turtlebot3_explorer)/worlds/tunnel_maze.world"/>
        <arg name="gui" value="$(arg gui)"/>
    </include>
    
    <!-- Global TF -->
    <node pkg="tf2_ros" type="static_transform_publisher" name="world_frame" 
          args="0 0 0 0 0 0 map world"/>
    
    <!-- Create a fake merged map -->
    <node name="fake_map_publisher" pkg="rostopic" type="rostopic"
          args="pub -l /map nav_msgs/OccupancyGrid '{header: {frame_id: map}, 
                info: {resolution: 0.1, width: 300, height: 300, 
                origin: {position: {x: -15.0, y: -15.0}}}, 
                data: [0]}'" />
    
    <!-- Survivor manager with pre-discovered survivors -->
    <node name="survivor_manager" pkg="turtlebot3_explorer" type="survivor_manager"
          output="screen">
        <param name="discovery_radius" value="100.0"/> <!-- Large radius to auto-discover -->
    </node>
    
    <!-- A* planner -->
    <node name="astar_planner" pkg="turtlebot3_explorer" type="astar_planner" 
          output="screen">
        <param name="allow_unknown" value="true"/>
        <param name="robot_radius" value="0.22"/>
    </node>
    
    <!-- LLM rescue planner -->
    <node name="llm_rescue_planner" pkg="turtlebot3_explorer" type="llm_rescue_planner.py"
          output="screen">
        <param name="ollama_model" value="llama3.2:3b"/>
    </node>
    
    <!-- Rescue robot -->
    <include file="$(find turtlebot3_explorer)/launch/rescue_robot.launch">
        <arg name="robot_name" value="rescue_robot"/>
        <arg name="model" value="waffle"/>
    </include>
    
    <!-- Rescue robot controller -->
    <node name="rescue_robot_controller" pkg="turtlebot3_explorer" type="rescue_robot.py"
          output="screen">
        <param name="robot_name" value="rescue_robot"/>
        <param name="spawn_x" value="0.0"/>
        <param name="spawn_y" value="0.0"/>
    </node>
    
    <!-- Immediately trigger exploration complete after 5 seconds -->
    <node name="trigger_rescue" pkg="rostopic" type="rostopic"
      args="pub -1 /exploration_complete std_msgs/Bool true" 
      launch-prefix="bash -c 'sleep 5; $0 $@'" />
    
    <!-- RViz -->
    <node name="rviz" pkg="rviz" type="rviz"
          args="-d $(find turtlebot3_explorer)/rviz/config.rviz"/>
</launch>