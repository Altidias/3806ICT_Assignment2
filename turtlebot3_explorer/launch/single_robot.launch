<launch>
    <arg name="robot_name"/>
    <arg name="model" default="burger"/>
    <arg name="x_pos" default="0.0"/>
    <arg name="y_pos" default="0.0"/>
    <arg name="z_pos" default="0.0"/>
    
    <group ns="$(arg robot_name)">
        <!-- tf prefix for namespace -->
        <param name="tf_prefix" value="$(arg robot_name)"/>
        
        <!-- robot description -->
        <param name="robot_description" 
               command="$(find xacro)/xacro $(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro" />
        
        <!-- spawn robot -->
        <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" 
              args="-urdf -model turtlebot3_$(arg robot_name) 
                    -x $(arg x_pos) -y $(arg y_pos) -z $(arg z_pos) 
                    -param robot_description" >
            <!-- remap for proper namespacing -->
            <remap from="odom" to="$(arg robot_name)/odom"/>
            <remap from="cmd_vel" to="$(arg robot_name)/cmd_vel"/>
        </node>
        
        <!-- robot state publisher -->
        <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
            <param name="publish_frequency" value="10.0"/>
            <param name="tf_prefix" value="$(arg robot_name)"/>
        </node>
        
        <!-- static tf publishers for robot links -->
        <node pkg="tf2_ros" type="static_transform_publisher" name="base_footprint_to_base_link" 
              args="0 0 0.010 0 0 0 $(arg robot_name)/base_footprint $(arg robot_name)/base_link" />

        <node pkg="tf2_ros" type="static_transform_publisher" name="base_link_to_laser" 
              args="-0.064 0 0.122 0 0 0 $(arg robot_name)/base_link $(arg robot_name)/base_scan" />

        <node pkg="tf2_ros" type="static_transform_publisher" name="base_link_to_caster" 
              args="-0.064 0 -0.007 0 0 0 $(arg robot_name)/base_link $(arg robot_name)/caster_back_link" />

        <node pkg="tf2_ros" type="static_transform_publisher" name="base_link_to_imu" 
              args="-0.032 0 0.068 0 0 0 $(arg robot_name)/base_link $(arg robot_name)/imu_link" />
            
        <node pkg="tf2_ros" type="static_transform_publisher" name="base_link_to_wheel_left" 
              args="0 0.08 0 0 0 0 $(arg robot_name)/base_link $(arg robot_name)/wheel_left_link" />

        <node pkg="tf2_ros" type="static_transform_publisher" name="base_link_to_wheel_right" 
              args="0 -0.08 0 0 0 0 $(arg robot_name)/base_link $(arg robot_name)/wheel_right_link" />
        
        <!-- slam gmapping -->
        <node pkg="gmapping" type="slam_gmapping" name="slam_gmapping" output="screen">
            <remap from="scan" to="scan"/>
            <remap from="map" to="map"/>
            <remap from="map_metadata" to="map_metadata"/>
            
            <!-- frame params -->
            <param name="base_frame" value="$(arg robot_name)/base_footprint"/>
            <param name="odom_frame" value="$(arg robot_name)/odom"/>
            <param name="map_frame" value="$(arg robot_name)/map"/>
            
            <!-- force transform publish -->
            <param name="transform_publish_period" value="0.05"/>
            
            <!-- slam params -->
            <param name="map_update_interval" value="0.1"/>  
            <param name="maxUrange" value="15.0"/> 
            <param name="maxRange" value="15.0"/> 
            <param name="particles" value="500"/> 
            <param name="linearUpdate" value="0.1"/>
            <param name="minimumScore" value="100"/>
            <param name="angularUpdate" value="0.2"/>
            <param name="temporalUpdate" value="0.1"/>
            <param name="delta" value="0.1"/>
            <param name="xmin" value="-15.0"/>
            <param name="ymin" value="-15.0"/>
            <param name="xmax" value="15.0"/>
            <param name="ymax" value="15.0"/>
        </node>
        
        <!-- tf to global map -->
        <node pkg="tf2_ros" type="static_transform_publisher" name="map_to_$(arg robot_name)_map" 
              args="0 0 0 0 0 0 map $(arg robot_name)/map"/>
        
        <!-- temp transform until gmapping starts -->
        <node pkg="tf2_ros" type="static_transform_publisher" name="temp_map_to_odom" 
              args="0 0 0 0 0 0 $(arg robot_name)/map $(arg robot_name)/odom"
              launch-prefix="bash -c 'sleep 1; $0 $@'"
              if="false"/>
        
    </group>
    
</launch>